# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from enum import Enum


from pydantic import BaseModel, ConfigDict


import baml_py

CheckT = typing_extensions.TypeVar('CheckT')
CheckName = typing_extensions.TypeVar('CheckName', bound=str)

class Check(BaseModel):
    name: str
    expression: str
    status: str
class Checked(BaseModel, typing.Generic[CheckT, CheckName]):
    value: CheckT
    checks: typing.Dict[CheckName, Check]

def get_checks(checks: typing.Dict[CheckName, Check]) -> typing.List[Check]:
    return list(checks.values())

def all_succeeded(checks: typing.Dict[CheckName, Check]) -> bool:
    return all(check.status == "succeeded" for check in get_checks(checks))
# #########################################################################
# Generated enums (0)
# #########################################################################

# #########################################################################
# Generated classes (5)
# #########################################################################

class Child_Condition(BaseModel):
    child_id: str
    reason: str
    required_MAT: str
    zone_name: str
    zone_id: str

class Happening(BaseModel):
    zone_id: str
    reason: str
    required_MAT: str
    zone_name: str

class Obligation(BaseModel):
    obligation: typing.Union["Happening", "Child_Condition"]

class Output(BaseModel):
    type: typing.Union[typing_extensions.Literal['move'], typing_extensions.Literal['prepare'], typing_extensions.Literal['help']]
    identifier: typing.Optional[str] = None
    help: typing.Optional[str] = None

class Zone(BaseModel):
    zone_id: str

# #########################################################################
# Generated type aliases (0)
# #########################################################################
